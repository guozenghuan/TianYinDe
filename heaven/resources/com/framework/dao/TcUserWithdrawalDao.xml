<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.framework.dao.TcUserWithdrawalDao">

	<select id="queryObject" resultType="com.framework.entity.TcUserWithdrawalEntity">
		select * from tc_user_withdrawal where id = #{value}
	</select>
	
	<select id="queryObjectByKey" resultType="com.framework.entity.TcUserWithdrawalEntity">
		select * from tc_user_withdrawal
		where id != -1
		<if test="id != null">
			and id = #{id}
		</if>
		<if test="userId != null">
			and user_id = #{userId}
		</if>
		<if test="orderNumber != null">
			and order_number = #{orderNumber}
		</if>
		<if test="money != null">
			and money = #{money}
		</if>
		<if test="createtime != null">
			and createtime = #{createtime}
		</if>
		<if test="status != null">
			and status = #{status}
		</if>
		<if test="note != null">
			and note = #{note}
		</if>
	</select>

	<select id="queryList" resultType="com.framework.entity.TcUserWithdrawalEntity">
		select * from tc_user_withdrawal 
		where id != -1
		<if test="keywod != null">
			and (user_id like concat('%', #{keywod}, '%') or order_number like concat('%', #{keywod}, '%'))
		</if>
		<if test="status != null">
			and status=#{status}
		</if>
		<if test="userId != null">
			and user_id=#{userId}
		</if>
		order by createtime ASC
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from tc_user_withdrawal 
		where id != -1
		<if test="keywod != null">
			and (user_id like concat('%', #{keywod}, '%') or order_number like concat('%', #{keywod}, '%'))
		</if>
		<if test="status != null">
			and status=#{status}
		</if>
		<if test="userId != null">
			and user_id=#{userId}
		</if>
	</select>
	 
	<insert id="save" parameterType="com.framework.entity.TcUserWithdrawalEntity" useGeneratedKeys="true" keyProperty="id">
		insert into tc_user_withdrawal
		(
			`user_id`, 
			`order_number`, 
			`money`, 
			`createtime`, 
			`status`, 
			`note`
		)
		values
		(
			#{userId}, 
			#{orderNumber}, 
			#{money}, 
			#{createtime}, 
			#{status}, 
			#{note}
		)
	</insert>
	 
	<update id="update" parameterType="com.framework.entity.TcUserWithdrawalEntity">
		update tc_user_withdrawal 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="orderNumber != null">`order_number` = #{orderNumber}, </if>
			<if test="money != null">`money` = #{money}, </if>
			<if test="createtime != null">`createtime` = #{createtime}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="note != null">`note` = #{note}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from tc_user_withdrawal where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tc_user_withdrawal where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>