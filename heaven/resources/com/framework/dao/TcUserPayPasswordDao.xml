<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.framework.dao.TcUserPayPasswordDao">

	<select id="queryObject" resultType="com.framework.entity.TcUserPayPasswordEntity">
		select * from tc_user_pay_password where id = #{value}
	</select>
	
	<select id="queryObjectByKey" resultType="com.framework.entity.TcUserPayPasswordEntity">
		select * from tc_user_pay_password
		where id != -1
		<if test="id != null">
			and id = #{id}
		</if>
		<if test="userId != null">
			and user_id = #{userId}
		</if>
		<if test="payPassword != null">
			and pay_password = #{payPassword}
		</if>
		<if test="updatetime != null">
			and updatetime = #{updatetime}
		</if>
	</select>

	<select id="queryList" resultType="com.framework.entity.TcUserPayPasswordEntity">
		select * from tc_user_pay_password 
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from tc_user_pay_password 
	</select>
	 
	<insert id="save" parameterType="com.framework.entity.TcUserPayPasswordEntity" useGeneratedKeys="true" keyProperty="id">
		insert into tc_user_pay_password
		(
			`user_id`, 
			`pay_password`, 
			`updatetime`
		)
		values
		(
			#{userId}, 
			#{payPassword}, 
			#{updatetime}
		)
	</insert>
	 
	<update id="update" parameterType="com.framework.entity.TcUserPayPasswordEntity">
		update tc_user_pay_password 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="payPassword != null">`pay_password` = #{payPassword}, </if>
			<if test="updatetime != null">`updatetime` = #{updatetime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from tc_user_pay_password where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from tc_user_pay_password where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>